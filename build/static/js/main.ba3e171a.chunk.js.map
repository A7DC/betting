{"version":3,"sources":["styles/variables.js","styles/typography.js","Event.jsx","EventList.jsx","BetSlip.jsx","BetSlipPreview.jsx","Header.jsx","App.js","serviceWorker.js","index.js"],"names":["color","_color","lime","darkerlime","grass","black","purple","orange","teal","yellow","Object","defineProperty","scale","typeScale","f6","f5","f4","type","t1","undefined","t2","fontSize","fontWeight","t5","margin","concat","t6","lightSilver","Event","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","home","away","draw","matchNumber","chosenBet","getSelection","react","style","container","width","name","display","flexDirection","Event_Button","React","Button","_ref","button","onClick","objectSpread","icon","background","moonGray","white","nearWhite","content","odds","overflow","flexBasis","flexGrow","border","borderRadius","padding","flex","EventList","chosenBets","events","map","val","i","Event_Event","height","BetSlip","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","state","stake","totalOdds","payout","updateWindowDimensions","setState","window","innerWidth","innerHeight","calculateTotal","oddsArray","push","reduce","acc","currVal","isNaN","handleChange","event","target","prevProps","addEventListener","removeEventListener","activeScreen","y","spring","_this2","_this$state","console","log","react_motion","getMotionProps","transform","marginBottom","marginTop","overflowY","BetSlip_Bet","form","span","Math","round","onChange","placeholder","ref","input","borderLeft","borderBottomLeftRadius","borderTopLeftRadius","borderBottomRightRadius","borderTopRightRadius","textTransform","Bet","_ref2","card","marginLeft","maxHeight","textAlign","paddingTop","position","left","right","top","bottom","zIndex","BetSlipPreview","totalBets","nextLevelIn","currentBonus","previousBonus","scrollPastHeader","calculateOdds","temporayArray","forEach","element","a","b","handleClick","screen","prevState","filter","x","keys","calculateWinBonus","offsetHeight","abs","_this3","el","paddingLeft","paddingRight","paddingBottom","Header","logo","src","alignItems","justifyContent","App","scrolledPastHeader","handleScroll","e","scrollY","toConsumableArray","bet","openBetSlips","Header_Header","outter","EventList_EventList","BetSlip_BetSlip","BetSlipPreview_BetSlipPreview","defaultProps","fontFamily","backgroundImage","backgroundRepeat","Boolean","location","hostname","match","ReactDOM","render","react_default","createElement","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba3e171a.chunk.js","sourcesContent":["export const color = {\n  lime: 'rgb(138, 198, 63)',\n  darkerlime: 'rgb(123, 175, 60)',\n  grass: 'rgb(13, 122, 61)',\n  black: 'rgb(35, 31, 32)',\n  purple: 'rgb(128, 41, 134)',\n  orange: 'rgb(231, 77, 37)',\n  teal: 'rgb(2, 143, 172)',\n  yellow: 'rgb(255, 222, 20)',\n  // grays\n  black: 'rgb(35, 31, 32)',\n  white: 'rgb(255, 255, 255)',\n  nearWhite: 'rgb(244, 242, 244)',\n  moonGray: 'rgb(221, 221, 221)',\n  lightSilver: 'rgb(153, 153, 153)',\n}\n\nexport const scale = {\n  s1: 4,\n  s2: 8,\n  s3: 16,\n  s4: 32,\n  s5: 64,\n  s6: 128,\n}\n\n\nexport const typeScale = {\n  f6: 12,\n  f5: 14,\n  f4: 18,\n}","import { typeScale, color, scale } from './variables'\n\nexport const type = {\n  t1: undefined,\n  t2: {\n    fontSize: typeScale.f4,\n    fontWeight: 600,\n  },\n  t5: {\n    fontWeight: 600,\n    fontSize: typeScale.f5,\n    color: color.black,\n    margin: `0 0 ${scale.s1}px 0`,\n  },\n  t6: {\n    fontSize: typeScale.f6,\n    color: color.lightSilver,\n    margin: `0 0 ${scale.s2}px 0`,\n  },\n}","import * as React from 'react'\nimport { color, scale } from './styles/variables'\nimport { type } from './styles/typography'\n\n\nexport class Event extends React.Component {\n    render() {\n        const { home, away, draw, matchNumber, chosenBet, getSelection } = this.props\n        // console.log(matchNumber, ' matchNumber')\n        return (\n            <div style={container}>\n                <div style={{\n                    width: '100%'\n                }}>\n                    <h5 style={type.t5}>{`${home.name} (1) - ${away.name} (2)`}</h5>\n                    <h6 style={type.t6}>English Premier League {/* need to get from Data object */}</h6>\n                </div>\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row'\n                }}>\n                    <Button \n                        chosenBet={chosenBet}\n                        matchNumber={matchNumber}\n                        type={home}\n                        getSelection={getSelection}\n                    />\n                    <Button \n                        chosenBet={chosenBet}\n                        matchNumber={matchNumber}\n                        type={draw}\n                        getSelection={getSelection}\n                    />\n                    <Button \n                        chosenBet={chosenBet}\n                        matchNumber={matchNumber}\n                        type={away}\n                        getSelection={getSelection}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst Button = ({ chosenBet, matchNumber, type, getSelection}) => (\n    <button\n        style={button}\n        onClick={() => getSelection(type, matchNumber)}\n    >\n        <span style={{\n            ...icon,\n            background: chosenBet == type.name ? color.darkerlime : color.moonGray,\n            color: chosenBet == type.name ? color.white : color.lightSilver,\n            }}>1</span>\n        <span style={{\n            background: chosenBet == type.name ? color.lime : color.nearWhite,\n            color: chosenBet == type.name ? color.white : color.black,\n            ...content\n        }}>\n            {type.odds}\n        </span>\n    </button>\n)\n\n// Define some standard CSS for your component\nconst container: React.CSSProperties = {\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    margin: `0 0 ${scale.s4}px 0`\n}\n\n// Define some standard CSS for your component\nconst button: React.CSSProperties = {\n    display: 'flex',\n    flexBasis: '33%',\n    flexGrow: 0,\n    border: 'none',\n    borderRadius: scale.s1,\n    padding: 0,\n}\n\n// Define some standard CSS for your component\nconst content: React.CSSProperties = {\n    padding: scale.s2,\n    flex: 1,\n}\n\n// Define some standard CSS for your component\nconst icon: React.CSSProperties = {\n    borderRadius: `${scale.s1} 0 0 ${scale.s1}`,\n    padding: scale.s2,\n}","import * as React from 'react';\nimport { Event } from './Event'\nimport { color, scale, typeScale } from './styles/variables'\n\nexport class EventList extends React.Component {\n\n  render() {\n    const { chosenBets, getSelection, events } = this.props\n    return (\n      <div style={style}>\n        {events.map((val, i) => {\n          return (\n            <Event\n              key={i}\n              matchNumber={i}\n              home={val.home}\n              away={val.away}\n              draw={val.draw}\n              getSelection={getSelection}\n              chosenBet={\n                chosenBets[i] ? chosenBets[i]['name'] : 'none'\n              }\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\n// Define some standard CSS for your component\nconst style = {\n  height: '100%',\n  width: '100%',\n  color: '#8855FF',\n  background: 'white',\n  borderRadius: scale.s2,\n  padding: scale.s3,\n  overflow: 'scroll'\n};","import * as React from \"react\";\nimport { color, scale } from './styles/variables'\nimport { Motion, spring } from 'react-motion'\nimport { type } from './styles/typography'\n\nexport class BetSlip extends React.Component {\n\n  state = {\n    stake: 0,\n    totalOdds: 0,\n    payout: 0,\n    width: 0,\n    height: 0,\n  }\n\n  componentDidUpdate(prevProps) {\n    const newProps = this.props\n    if (prevProps !== newProps) {\n      this.calculateTotal(this.state.stake, this.props.chosenBets)\n    }\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  calculateTotal = (stake, chosenBets) => {\n\n    let oddsArray = []\n    chosenBets.map((val, i) => { oddsArray.push(val.odds) })\n\n    const reducer = (acc, currVal) => acc + (isNaN(currVal) ? 0 : currVal);\n\n    this.setState({\n      totalOdds: oddsArray.reduce(reducer, 0),\n      payout: this.state.totalOdds * this.state.stake,\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({ stake: event.target.value }, () => {\n      this.calculateTotal(this.state.stake, this.props.chosenBets)\n    })\n  }\n\n  getMotionProps() {\n    return this.props.activeScreen === 'betslips'\n      ? { style: { y: spring(0) } }\n      : { style: { y: spring(this.state.height) } }\n  }\n\n  // this.state.activeScreen\n  render() {\n    const { chosenBets } = this.props\n    const { totalOdds, payout } = this.state\n    console.log(this.props.activeScreen, 'this.props.activeScreen')\n    return (\n      <div>\n        <Motion {...this.getMotionProps()}>\n          {({ y }) => {\n            return (\n                <div\n                  style={{\n                    ...style,\n                    transform: 'translateY(' + y + 'px' + ')',\n\n                  }}\n                >\n                <h2 style={{ ...type.t2, color: 'white', marginBottom: scale.s3, marginTop: 0}}>Betslips (count)</h2>\n                  <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                    <div style={{ flex: 4, overflowY: 'scroll'}}>\n                      {chosenBets.map((val, i) => {\n                        if (val.name) {\n                          return (\n                            <Bet\n                              key={i}\n                              chosenBet={val}\n                              event={this.props.events[i]}\n                            />\n                          )\n                        }\n                      })}\n                    </div>\n                    <div style={form}>\n                      <div style={{display: 'flex', flexDirection: 'column', flex: 1}}>\n                        <span style={{...type.t5, ...span, fontWeight: 600}}>{`Price: ${totalOdds}`}</span>\n                        <span style={{ ...type.t5, ...span, fontWeight: 600 }}>{`Potential winnings: ${Math.round(this.state.payout * 100) / 100}`}</span>\n                        <span style={{ ...type.t5, ...span, fontWeight: 600 }}>{`Payout: ${Math.round(this.state.payout * 100) / 100}`}</span>\n                        <div style={{display: 'flex', marginTop: scale.s2}}>\n                          <input\n                            value={this.state.stake}\n                            onChange={this.handleChange}\n                            placeholder='Type something...'\n                            type='number'\n                            ref={(input) => { this.input = input }}\n                            style={{\n                              flex: 1,\n                              padding: scale.s3,\n                              borderLeft: scale.s2,\n                              borderBottomLeftRadius: scale.s1,\n                              borderTopLeftRadius: scale.s1,\n                              border: 'none'\n                            }}\n                          />\n                          <button style={{\n                            background: color.grass,\n                            color: color.white,\n                            border: 'none',\n                            flex: 2,\n                            borderBottomRightRadius: scale.s1,\n                            borderTopRightRadius: scale.s1,\n                            textTransform: 'uppercase',\n                            fontWeight: 600,\n                          }}>Place bet</button>\n                        </div>\n                      </div>\n                  </div>\n                  </div>\n                </div>\n            )\n          }}\n        </Motion>\n      </div>\n    )\n  }\n\n}\n\nconst Bet = ({ chosenBet, event }) => (\n  <div style={card}>\n    <h6 style={{ ...type.t5, marginBottom: scale.s2,}}>{event.home.name} - {event.away.name}</h6>\n    <div style={{\n      display: 'flex'\n    }}>\n      <h5 style={type.t6}>{chosenBet.name}</h5>\n      <h5 style={{ ...type.t6, marginLeft: 'auto'}}>{chosenBet.odds}</h5>\n    </div>\n  </div>\n)\n\nconst card = {\n  background: color.white,\n  color: color.black,\n  padding: scale.s3,\n  marginBottom: scale.s3,\n  borderRadius: scale.s2,\n  maxHeight: scale.s5 + scale.s2,\n}\n\nconst span = {\n  color: color.white,\n  marginBottom: scale.s3,\n  textAlign: 'right'\n}\n\nconst form = {\n  color: color.white,\n  paddingTop: scale.s3,\n  borderRadius: scale.s2,\n}\n\nconst style = {\n  fontSize: 20,\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: 'column',\n  background: color.black,\n  color: color.white,\n  padding: scale.s3,\n  position: 'fixed',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  zIndex: 1,\n}","import * as React from 'react';\nimport { Event } from './Event'\nimport { color, scale, typeScale } from './styles/variables'\nimport { type } from './styles/typography'\nimport { Motion, spring } from 'react-motion'\nimport { throws } from 'assert';\n\nexport class BetSlipPreview extends React.Component {\n  state = {\n    totalBets: 0,\n    nextLevelIn: 3,\n    currentBonus: 10,\n    previousBonus: undefined,\n    scrollPastHeader: false,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only update chart if the data has changed\n    if (prevProps !== this.props) {\n      this.setState({\n        totalBets: this.props.chosenBets.filter(x => Object.keys(x).length).length\n      }, () => {\n        this.calculateWinBonus(this.state.totalBets)\n        this.calculateOdds(this.props.chosenBets)\n        this.setState({ scrollPastHeader: true})\n      } )\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      height: this.element.offsetHeight\n    })\n  }\n\n  calculateWinBonus(totalBets) {\n\n    // make DRY\n\n    if (totalBets <= 3) {\n      for (let i = 0; i <= 3; i++) {\n        if (totalBets === i) {\n          this.setState({ \n            nextLevelIn: Math.abs(i - 3),\n            currentBonus: this.state.currentBonus,\n          })\n        }\n      }\n    } \n\n    if (totalBets >= 3 && totalBets <= 5) {\n      for (let i = 0; i <= 5; i++) {\n        if (totalBets === i) {\n          this.setState({ \n            nextLevelIn: Math.abs(i - 5),\n            currentBonus: 50,\n            previousBonus: 10,\n          })\n        }\n      }\n    } \n\n    if (totalBets >= 5 && totalBets <= 6) {\n      for (let i = 0; i <= 6; i++) {\n        if (totalBets === i) {\n          this.setState({ \n            nextLevelIn: Math.abs(i - 6),\n            currentBonus: 100,\n            previousBonus: 100,\n          })\n        }\n      }\n    } \n  }\n\n  calculateOdds = (chosenBets) => {\n\n    let temporayArray = []\n    chosenBets.map((val, i) => { temporayArray.push(val.odds) })\n\n    let oddsArray = []\n    temporayArray.forEach(element => {\n      if (typeof element == 'number') {\n        oddsArray.push(element)\n      }\n    })\n      \n    this.setState({\n      totalOdds: oddsArray.reduce((a, b) => a * b)\n    })\n\n  }\n\n\n  getMotionProps() {\n    return this.state.scrollPastHeader === false\n      ? { style: { y: spring(0) } }\n      : { style: { y: spring(-this.state.height) } }\n  }\n\n  handleClick = (screen) => {\n    this.props.onClick(screen)\n  }\n\n  render() {\n    return (\n\n      <div onClick={() => this.handleClick('betslips')}>\n        <Motion {...this.getMotionProps()}>\n          {({ y }) => {\n            return (\n              <div \n              ref={(el) => { this.element = el; }}\n              style={{ \n                ...style,\n                bottom: -this.state.height,\n                transform: 'translateY(' + y + 'px' + ')'\n                }}>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <h3 style={{\n                    fontSize: type.t2,\n                    margin: 0,\n                    color: color.yellow,\n                  }}>{this.state.currentBonus === 100 ? '100% win bonus!' : `Get a ${this.state.currentBonus}% win bonus in ${this.state.nextLevelIn} bets`}</h3>\n                  <span style={{ \n                    ...type.t5,\n                    ...span,\n                  }}>Price: {Math.round(this.state.totalOdds * 100) / 100} {this.state.totalBets >= 3 ? `(+${this.state.previousBonus}% win bonus active)` : null}</span>\n                </div>\n              </div>\n            )\n          }}\n        </Motion>\n      </div>\n    )\n  }\n}\n\nconst style = {\n  paddingLeft: scale.s4,\n  paddingRight: scale.s4,\n  paddingTop: scale.s3,\n  paddingBottom: scale.s3,\n  position: 'fixed',\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: color.black,\n  color: color.white,\n}\n\nconst span = {\n  color: color.white\n}","import * as React from 'react';\nimport {color, scale, typeScale} from './styles/variables'\n\nexport class Header extends React.Component {\n    state = {\n        totalBets: 0\n    }\n    componentDidUpdate(prevProps, prevState) {\n        // only update chart if the data has changed\n        if (prevProps !== this.props) {\n            this.setState({ \n                totalBets: this.props.chosenBets.filter(x => Object.keys(x).length).length \n            })\n        }\n    }\n    render() {\n        // console.log(this.props.chosenBets.filter(x => Object.keys(x).length).length, ' dfdg')\n        return (\n            <header style={container}>\n                <img style={logo} src={'/images/logo.png'} />\n                <button style={button}>{this.state.totalBets} bets</button>\n            </header>\n        );\n    }\n}\n\nconst container = {\n    padding: scale.s3,\n    paddingBottom: 0,\n    display: 'flex',\n    textAlign: 'center',\n    background: color.black,\n}\n\nconst logo = {\n    width: 120,\n    height: 19,\n}\n\nconst button = {\n    background: color.yellow,\n    color: color.black,\n    borderRadius: scale.s1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: 'none',\n    height: scale.s3 + scale.s1,\n    fontSize: typeScale.t1,\n    fontWeight: 600,\n    marginLeft: 'auto',\n    textTransform: 'uppercase'\n}","import * as React from \"react\"\nimport { EventList } from './EventList'\nimport { BetSlip } from './BetSlip'\nimport { BetSlipPreview } from './BetSlipPreview'\nimport { Header } from './Header'\nimport { scale } from './styles/variables'\n\n\nexport default class App extends React.Component{\n\n  static defaultProps = {\n    events: [\n      {\n        home: {\n          name: 'Real Madrid',\n          odds: 1.69\n        },\n        away: {\n          name: 'Ajax',\n          odds: 5.00\n        },\n        draw: {\n          name: 'Draw',\n          odds: 4.20\n        },\n      },\n      {\n        home: {\n          name: 'Derby County',\n          odds: 2.00\n        },\n        away: {\n          name: 'Wigan Athletic',\n          odds: 3.00\n        },\n        draw: {\n          name: 'Draw',\n          odds: 4.35\n        },\n      },\n      {\n        home: {\n          name: 'Fullham',\n          odds: 3.00\n        },\n        away: {\n          name: 'Chelsea FC',\n          odds: 5.00\n        },\n        draw: {\n          name: 'Draw',\n          odds: 4.35\n        },\n      },\n      {\n        home: {\n          name: 'Celtic',\n          odds: 3.00\n        },\n        away: {\n          name: 'Rangers',\n          odds: 4.00\n        },\n        draw: {\n          name: 'Draw',\n          odds: 4.35\n        },\n      },\n      {\n        home: {\n          name: 'Real Madrid',\n          odds: 1.69\n        },\n        away: {\n          name: 'Ajax',\n          odds: 5.00\n        },\n        draw: {\n          name: 'Draw',\n          odds: 4.20\n        },\n      },\n      {\n        home: {\n          name: 'Derby County',\n          odds: 2.00\n        },\n        away: {\n          name: 'Wigan Athletic',\n          odds: 3.00\n        },\n        draw: {\n          name: 'Draw',\n          odds: 4.35\n        },\n      },\n      {\n        home: {\n          name: 'Fullham',\n          odds: 3.00\n        },\n        away: {\n          name: 'Chelsea FC',\n          odds: 5.00\n        },\n        draw: {\n          name: 'Draw',\n          odds: 4.35\n        },\n      },\n      {\n        home: {\n          name: 'Celtic',\n          odds: 3.00\n        },\n        away: {\n          name: 'Rangers',\n          odds: 4.00\n        },\n        draw: {\n          name: 'Draw',\n          odds: 4.35\n        },\n      },\n    ],\n    getSelection: null,\n    chosenBets: [\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      // if you add more default props have to add more default empty objects\n    ],\n  }\n\n  state = {\n    chosenBets: this.props.chosenBets,\n    events: this.props.events,\n    scrolledPastHeader: false,\n    activeScreen: 'home',\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      events: props.events,\n      chosenBets: props.chosenBets,\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  handleScroll = (e) => {\n    const scrollY = window.scrollY\n    console.log(scrollY, 'scrollY')\n  }\n\n  getSelection = (val, matchNumber) => {\n    // 1. Make a shallow copy of the items\n    let chosenBets = [...this.props.chosenBets]\n    // // 2. Make a shallow copy of the item you want to mutate\n    let bet = { ...chosenBets[matchNumber] }\n    // // 3. Replace the property you're intested in\n    bet = val\n    // // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n    this.props.chosenBets[matchNumber] = bet\n\n    this.setState({ chosenBets: chosenBets })\n    // 5. Set the state to our new copy\n    // console.log(data.chosenBets, 'data.chosenBets')\n  }\n\n  openBetSlips = (screen) => {\n    this.setState({ activeScreen: screen}, () => console.log(this.state.activeScreen, 'activeScreen'))\n  }\n\n  render() {\n    return (\n      <div style={style}>\n        <Header chosenBets={this.props.chosenBets} />\n        <div style={outter}>\n          <EventList\n            getSelection={this.getSelection}\n            chosenBets={this.props.chosenBets}\n            events={this.state.events}\n          />\n        </div>\n        <BetSlip\n          activeScreen={this.state.activeScreen}\n          chosenBets={this.state.chosenBets}\n          events={this.props.events}\n        />\n        <BetSlipPreview onClick={this.openBetSlips} chosenBets={this.state.chosenBets} />\n      </div>\n    )\n  }\n}\n\n// Define some standard CSS for your component\nconst style = {\n  height: \"100%\",\n  fontFamily: 'proxima-nova, sans-serif',\n  background: 'rgb(237, 232, 237)',\n  backgroundImage: 'url(images/dark-bg.png)',\n  backgroundRepeat: 'repeat-x'\n}\n\nconst outter = {\n  padding: scale.s3,\n  position: 'relative',\n  height: '100%',\n  width: '100%',\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}